<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <title>mud-mmorpg</title>  
        <link rel="stylesheet" type="text/css" href="public/css/styles.css">  
        <script src="https://cdn.jsdelivr.net/npm/phaser@3.15.1/dist/phaser-arcade-physics.min.js"></script>
    </head>
<body>

    <section>
        <div class="game-container"></div>
        <script>
            const config = {
            type: Phaser.AUTO,
            width: 800,
            height: 600,
            zoom: 0, // Since we're working with 16x16 pixel tiles, let's scale up the canvas by 3x
            pixelArt: true, // Force the game to scale images up crisply
            parent: "game-container",
            scene: {
                preload: preload,
                create: create
            }
            };
        
            var game = new Phaser.Game(config);

            function preload() {
                
                this.load.image("tiles", "./public/maps/tmw_desert_spacing.png");
                this.load.tilemapTiledJSON("map", "./public/maps/testmap.json");
            }

            function create() {
                const map = this.make.tilemap({ key: "map" });

                // Parameters are the name you gave the tileset in Tiled and then the key of the tileset image in
                // Phaser's cache (i.e. the name you used in preload)
                const tileset = map.addTilesetImage("Desert", "tiles");

                // Parameters: layer name (or index) from Tiled, tileset, x, y
                const ground = map.createDynamicLayer("Ground", tileset, 0, 0);
                ground.setScale(0.4); // scale to half
                ground.setOrigin(0.5);
                ground.resizeWorld();
                
            }
        </script>
    </section>

</body>
</html>